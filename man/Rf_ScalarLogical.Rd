% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rf_ScalarLogical.R
\name{Rf_ScalarLogical}
\alias{Rf_ScalarLogical}
\alias{ScalarLogical}
\title{Rf_ScalarLogical}
\arguments{
\item{x}{an int value.}
}
\value{
A \link{SEXP} object, namely a length one \code{logical} vector.
}
\description{
\figure{fnp.svg}{Pure function} \figure{c2r.svg}{C to R} \figure{prot.svg}{protect}

Converts an \code{int x} to a \link{SEXP} object that represents an R length one
\code{logical} vector. The mapping from C integers to R's logical is:
\itemize{
\item If \code{x} is \link{NA_LOGICAL}, then return value is \code{NA} (\link{R_LogicalNAValue})
\item If \code{x} is 0, then return value is \code{FALSE} (\link{R_FalseValue})
\item If \code{x} is any other value, then the return value is \code{TRUE} (\link{R_TrueValue})
}
}
\section{Declaration}{
\preformatted{SEXP Rf_ScalarLogical(int x);
}

In \href{https://github.com/wch/r-source/blob/trunk/src/include/Rinternals.h}{Rinternals.h}.
}

\section{Definition}{
\preformatted{INLINE_FUN SEXP ScalarLogical(int x)
\{
  extern SEXP R_LogicalNAValue, R_TrueValue, R_FalseValue;
  if (x == NA_LOGICAL) return R_LogicalNAValue;
  else if (x != 0) return R_TrueValue;
  else return R_FalseValue;
\}
}

In \href{https://github.com/wch/r-source/blob/trunk/src/include/Rinlinedfuns.h}{Rinlinedfuns.h}.
}

\examples{
# Convert a C int number as an R length one logical vector with TRUE
true <- inline::cfunction(NULL,
 ' int x = 2;
   SEXP y;
   y = PROTECT(Rf_ScalarLogical(x));
   UNPROTECT(1);
   return y;
 ')
true()

# Convert a C int number as an R length one logical vector with FALSE
false <- inline::cfunction(NULL,
 ' int x = 0;
   SEXP y;
   y = PROTECT(Rf_ScalarLogical(x));
   UNPROTECT(1);
   return y;
 ')
false()

# Convert a C int number as an R length one logical vector with NA
na_logical <- inline::cfunction(NULL,
 ' int x = NA_LOGICAL;
   SEXP y;
   y = PROTECT(Rf_ScalarLogical(x));
   UNPROTECT(1);
   return y;
 ')
na_logical()

}
